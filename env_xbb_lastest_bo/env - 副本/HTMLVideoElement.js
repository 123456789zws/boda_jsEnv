// HTMLVideoElement对象
HTMLVideoElement = function HTMLVideoElement(){let arg=arguments[0];
if (arg!='bobo' && !(this instanceof HTMLVideoElement) ){return bodavm.toolsFunc.throwError("TypeError", "Illegal constructor")};bodavm.toolsFunc.symbolProperty(this);
if (arg =='bobo'){console.log_copy('HTMLVideoElement 实例化对象 --->',JSON.stringify_bo(arguments,function(k,v){if (v==window){return 'window'}else{return v}}))};}

bodavm.toolsFunc.safeProto(HTMLVideoElement, "HTMLVideoElement");
HTMLVideoElement.prototype.__proto__=HTMLMediaElement.prototype;
HTMLVideoElement.__proto__=HTMLMediaElement;
bodavm.toolsFunc.defineProperty(HTMLVideoElement.prototype, "width", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLVideoElement.prototype, "HTMLVideoElement", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLVideoElement.prototype, "HTMLVideoElement", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(HTMLVideoElement.prototype, "height", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLVideoElement.prototype, "HTMLVideoElement", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLVideoElement.prototype, "HTMLVideoElement", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(HTMLVideoElement.prototype, "videoWidth", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLVideoElement.prototype, "HTMLVideoElement", "bodefault_get", arguments)}, set:undefined},);
bodavm.toolsFunc.defineProperty(HTMLVideoElement.prototype, "videoHeight", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLVideoElement.prototype, "HTMLVideoElement", "bodefault_get", arguments)}, set:undefined},);
bodavm.toolsFunc.defineProperty(HTMLVideoElement.prototype, "poster", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLVideoElement.prototype, "HTMLVideoElement", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLVideoElement.prototype, "HTMLVideoElement", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(HTMLVideoElement.prototype, "webkitDecodedFrameCount", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLVideoElement.prototype, "HTMLVideoElement", "bodefault_get", arguments)}, set:undefined},);
bodavm.toolsFunc.defineProperty(HTMLVideoElement.prototype, "webkitDroppedFrameCount", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLVideoElement.prototype, "HTMLVideoElement", "bodefault_get", arguments)}, set:undefined},);
bodavm.toolsFunc.defineProperty(HTMLVideoElement.prototype, "playsInline", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLVideoElement.prototype, "HTMLVideoElement", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLVideoElement.prototype, "HTMLVideoElement", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(HTMLVideoElement.prototype, "onenterpictureinpicture", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLVideoElement.prototype, "HTMLVideoElement", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLVideoElement.prototype, "HTMLVideoElement", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(HTMLVideoElement.prototype, "onleavepictureinpicture", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLVideoElement.prototype, "HTMLVideoElement", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLVideoElement.prototype, "HTMLVideoElement", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(HTMLVideoElement.prototype, "disablePictureInPicture", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLVideoElement.prototype, "HTMLVideoElement", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLVideoElement.prototype, "HTMLVideoElement", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(HTMLVideoElement.prototype, "cancelVideoFrameCallback", {configurable:true, enumerable:true, writable:true, value:function cancelVideoFrameCallback (){return bodavm.toolsFunc.dispatch(this, HTMLVideoElement.prototype, "HTMLVideoElement", "cancelVideoFrameCallback", arguments)}},);
bodavm.toolsFunc.defineProperty(HTMLVideoElement.prototype, "requestPictureInPicture", {configurable:true, enumerable:true, writable:true, value:function requestPictureInPicture (){return bodavm.toolsFunc.dispatch(this, HTMLVideoElement.prototype, "HTMLVideoElement", "requestPictureInPicture", arguments)}},);
bodavm.toolsFunc.defineProperty(HTMLVideoElement.prototype, "requestVideoFrameCallback", {configurable:true, enumerable:true, writable:true, value:function requestVideoFrameCallback (){return bodavm.toolsFunc.dispatch(this, HTMLVideoElement.prototype, "HTMLVideoElement", "requestVideoFrameCallback", arguments)}},);
bodavm.toolsFunc.defineProperty(HTMLVideoElement.prototype, "webkitSupportsFullscreen", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLVideoElement.prototype, "HTMLVideoElement", "bodefault_get", arguments)}, set:undefined},);
bodavm.toolsFunc.defineProperty(HTMLVideoElement.prototype, "webkitDisplayingFullscreen", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLVideoElement.prototype, "HTMLVideoElement", "bodefault_get", arguments)}, set:undefined},);
bodavm.toolsFunc.defineProperty(HTMLVideoElement.prototype, "getVideoPlaybackQuality", {configurable:true, enumerable:true, writable:true, value:function getVideoPlaybackQuality (){return bodavm.toolsFunc.dispatch(this, HTMLVideoElement.prototype, "HTMLVideoElement", "getVideoPlaybackQuality", arguments)}},);
bodavm.toolsFunc.defineProperty(HTMLVideoElement.prototype, "webkitEnterFullScreen", {configurable:true, enumerable:true, writable:true, value:function webkitEnterFullScreen (){return bodavm.toolsFunc.dispatch(this, HTMLVideoElement.prototype, "HTMLVideoElement", "webkitEnterFullScreen", arguments)}},);
bodavm.toolsFunc.defineProperty(HTMLVideoElement.prototype, "webkitEnterFullscreen", {configurable:true, enumerable:true, writable:true, value:function webkitEnterFullscreen (){return bodavm.toolsFunc.dispatch(this, HTMLVideoElement.prototype, "HTMLVideoElement", "webkitEnterFullscreen", arguments)}},);
bodavm.toolsFunc.defineProperty(HTMLVideoElement.prototype, "webkitExitFullScreen", {configurable:true, enumerable:true, writable:true, value:function webkitExitFullScreen (){return bodavm.toolsFunc.dispatch(this, HTMLVideoElement.prototype, "HTMLVideoElement", "webkitExitFullScreen", arguments)}},);
bodavm.toolsFunc.defineProperty(HTMLVideoElement.prototype, "webkitExitFullscreen", {configurable:true, enumerable:true, writable:true, value:function webkitExitFullscreen (){return bodavm.toolsFunc.dispatch(this, HTMLVideoElement.prototype, "HTMLVideoElement", "webkitExitFullscreen", arguments)}},);
