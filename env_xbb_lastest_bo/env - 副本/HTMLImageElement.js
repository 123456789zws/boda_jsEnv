// HTMLImageElement对象
HTMLImageElement = function HTMLImageElement(){let arg=arguments[0];
if (arg!='bobo' && !(this instanceof HTMLImageElement) ){return bodavm.toolsFunc.throwError("TypeError", "Illegal constructor")};bodavm.toolsFunc.symbolProperty(this);
if (arg =='bobo'){console.log_copy('HTMLImageElement 实例化对象 --->',JSON.stringify_bo(arguments,function(k,v){if (v==window){return 'window'}else{return v}}))};}

bodavm.toolsFunc.safeProto(HTMLImageElement, "HTMLImageElement");
HTMLImageElement.prototype.__proto__=HTMLElement.prototype;
HTMLImageElement.__proto__=HTMLElement;
bodavm.toolsFunc.defineProperty(HTMLImageElement.prototype, "alt", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLImageElement.prototype, "HTMLImageElement", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLImageElement.prototype, "HTMLImageElement", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(HTMLImageElement.prototype, "src", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLImageElement.prototype, "HTMLImageElement", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLImageElement.prototype, "HTMLImageElement", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(HTMLImageElement.prototype, "srcset", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLImageElement.prototype, "HTMLImageElement", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLImageElement.prototype, "HTMLImageElement", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(HTMLImageElement.prototype, "sizes", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLImageElement.prototype, "HTMLImageElement", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLImageElement.prototype, "HTMLImageElement", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(HTMLImageElement.prototype, "crossOrigin", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLImageElement.prototype, "HTMLImageElement", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLImageElement.prototype, "HTMLImageElement", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(HTMLImageElement.prototype, "useMap", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLImageElement.prototype, "HTMLImageElement", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLImageElement.prototype, "HTMLImageElement", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(HTMLImageElement.prototype, "isMap", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLImageElement.prototype, "HTMLImageElement", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLImageElement.prototype, "HTMLImageElement", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(HTMLImageElement.prototype, "width", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLImageElement.prototype, "HTMLImageElement", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLImageElement.prototype, "HTMLImageElement", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(HTMLImageElement.prototype, "height", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLImageElement.prototype, "HTMLImageElement", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLImageElement.prototype, "HTMLImageElement", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(HTMLImageElement.prototype, "naturalWidth", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLImageElement.prototype, "HTMLImageElement", "bodefault_get", arguments)}, set:undefined},);
bodavm.toolsFunc.defineProperty(HTMLImageElement.prototype, "naturalHeight", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLImageElement.prototype, "HTMLImageElement", "bodefault_get", arguments)}, set:undefined},);
bodavm.toolsFunc.defineProperty(HTMLImageElement.prototype, "complete", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLImageElement.prototype, "HTMLImageElement", "bodefault_get", arguments)}, set:undefined},);
bodavm.toolsFunc.defineProperty(HTMLImageElement.prototype, "currentSrc", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLImageElement.prototype, "HTMLImageElement", "bodefault_get", arguments)}, set:undefined},);
bodavm.toolsFunc.defineProperty(HTMLImageElement.prototype, "referrerPolicy", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLImageElement.prototype, "HTMLImageElement", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLImageElement.prototype, "HTMLImageElement", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(HTMLImageElement.prototype, "decoding", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLImageElement.prototype, "HTMLImageElement", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLImageElement.prototype, "HTMLImageElement", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(HTMLImageElement.prototype, "name", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLImageElement.prototype, "HTMLImageElement", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLImageElement.prototype, "HTMLImageElement", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(HTMLImageElement.prototype, "lowsrc", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLImageElement.prototype, "HTMLImageElement", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLImageElement.prototype, "HTMLImageElement", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(HTMLImageElement.prototype, "align", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLImageElement.prototype, "HTMLImageElement", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLImageElement.prototype, "HTMLImageElement", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(HTMLImageElement.prototype, "hspace", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLImageElement.prototype, "HTMLImageElement", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLImageElement.prototype, "HTMLImageElement", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(HTMLImageElement.prototype, "vspace", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLImageElement.prototype, "HTMLImageElement", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLImageElement.prototype, "HTMLImageElement", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(HTMLImageElement.prototype, "longDesc", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLImageElement.prototype, "HTMLImageElement", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLImageElement.prototype, "HTMLImageElement", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(HTMLImageElement.prototype, "border", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLImageElement.prototype, "HTMLImageElement", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLImageElement.prototype, "HTMLImageElement", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(HTMLImageElement.prototype, "x", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLImageElement.prototype, "HTMLImageElement", "bodefault_get", arguments)}, set:undefined},);
bodavm.toolsFunc.defineProperty(HTMLImageElement.prototype, "y", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLImageElement.prototype, "HTMLImageElement", "bodefault_get", arguments)}, set:undefined},);
bodavm.toolsFunc.defineProperty(HTMLImageElement.prototype, "decode", {configurable:true, enumerable:true, writable:true, value:function decode (){return bodavm.toolsFunc.dispatch(this, HTMLImageElement.prototype, "HTMLImageElement", "decode", arguments)}},);
bodavm.toolsFunc.defineProperty(HTMLImageElement.prototype, "fetchPriority", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLImageElement.prototype, "HTMLImageElement", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLImageElement.prototype, "HTMLImageElement", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(HTMLImageElement.prototype, "loading", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLImageElement.prototype, "HTMLImageElement", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLImageElement.prototype, "HTMLImageElement", "bodefault_set", arguments)}},);
