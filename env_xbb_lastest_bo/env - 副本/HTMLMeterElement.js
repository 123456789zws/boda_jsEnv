// HTMLMeterElement对象
HTMLMeterElement = function HTMLMeterElement(){let arg=arguments[0];
if (arg!='bobo' && !(this instanceof HTMLMeterElement) ){return bodavm.toolsFunc.throwError("TypeError", "Illegal constructor")};bodavm.toolsFunc.symbolProperty(this);
if (arg =='bobo'){console.log_copy('HTMLMeterElement 实例化对象 --->',JSON.stringify_bo(arguments,function(k,v){if (v==window){return 'window'}else{return v}}))};}

bodavm.toolsFunc.safeProto(HTMLMeterElement, "HTMLMeterElement");
HTMLMeterElement.prototype.__proto__=HTMLElement.prototype;
HTMLMeterElement.__proto__=HTMLElement;
bodavm.toolsFunc.defineProperty(HTMLMeterElement.prototype, "value", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLMeterElement.prototype, "HTMLMeterElement", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLMeterElement.prototype, "HTMLMeterElement", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(HTMLMeterElement.prototype, "min", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLMeterElement.prototype, "HTMLMeterElement", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLMeterElement.prototype, "HTMLMeterElement", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(HTMLMeterElement.prototype, "max", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLMeterElement.prototype, "HTMLMeterElement", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLMeterElement.prototype, "HTMLMeterElement", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(HTMLMeterElement.prototype, "low", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLMeterElement.prototype, "HTMLMeterElement", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLMeterElement.prototype, "HTMLMeterElement", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(HTMLMeterElement.prototype, "high", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLMeterElement.prototype, "HTMLMeterElement", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLMeterElement.prototype, "HTMLMeterElement", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(HTMLMeterElement.prototype, "optimum", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLMeterElement.prototype, "HTMLMeterElement", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLMeterElement.prototype, "HTMLMeterElement", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(HTMLMeterElement.prototype, "labels", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLMeterElement.prototype, "HTMLMeterElement", "bodefault_get", arguments)}, set:undefined},);
