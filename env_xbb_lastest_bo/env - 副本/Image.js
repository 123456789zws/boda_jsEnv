// Image对象
Image = function Image(){bodavm.toolsFunc.symbolProperty(this);
if (arg =='bobo'){console.log_copy('Image 实例化对象 --->',JSON.stringify_bo(arguments,function(k,v){if (v==window){return 'window'}else{return v}}))};}

bodavm.toolsFunc.safeProto(Image, "Image");
Image.prototype.__proto__=HTMLElement.prototype;
bodavm.toolsFunc.defineProperty(Image.prototype, "alt", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, Image.prototype, "Image", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, Image.prototype, "Image", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(Image.prototype, "src", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, Image.prototype, "Image", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, Image.prototype, "Image", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(Image.prototype, "srcset", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, Image.prototype, "Image", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, Image.prototype, "Image", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(Image.prototype, "sizes", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, Image.prototype, "Image", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, Image.prototype, "Image", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(Image.prototype, "crossOrigin", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, Image.prototype, "Image", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, Image.prototype, "Image", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(Image.prototype, "useMap", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, Image.prototype, "Image", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, Image.prototype, "Image", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(Image.prototype, "isMap", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, Image.prototype, "Image", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, Image.prototype, "Image", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(Image.prototype, "width", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, Image.prototype, "Image", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, Image.prototype, "Image", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(Image.prototype, "height", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, Image.prototype, "Image", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, Image.prototype, "Image", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(Image.prototype, "naturalWidth", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, Image.prototype, "Image", "bodefault_get", arguments)}, set:undefined},);
bodavm.toolsFunc.defineProperty(Image.prototype, "naturalHeight", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, Image.prototype, "Image", "bodefault_get", arguments)}, set:undefined},);
bodavm.toolsFunc.defineProperty(Image.prototype, "complete", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, Image.prototype, "Image", "bodefault_get", arguments)}, set:undefined},);
bodavm.toolsFunc.defineProperty(Image.prototype, "currentSrc", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, Image.prototype, "Image", "bodefault_get", arguments)}, set:undefined},);
bodavm.toolsFunc.defineProperty(Image.prototype, "referrerPolicy", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, Image.prototype, "Image", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, Image.prototype, "Image", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(Image.prototype, "decoding", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, Image.prototype, "Image", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, Image.prototype, "Image", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(Image.prototype, "name", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, Image.prototype, "Image", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, Image.prototype, "Image", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(Image.prototype, "lowsrc", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, Image.prototype, "Image", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, Image.prototype, "Image", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(Image.prototype, "align", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, Image.prototype, "Image", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, Image.prototype, "Image", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(Image.prototype, "hspace", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, Image.prototype, "Image", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, Image.prototype, "Image", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(Image.prototype, "vspace", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, Image.prototype, "Image", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, Image.prototype, "Image", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(Image.prototype, "longDesc", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, Image.prototype, "Image", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, Image.prototype, "Image", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(Image.prototype, "border", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, Image.prototype, "Image", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, Image.prototype, "Image", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(Image.prototype, "x", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, Image.prototype, "Image", "bodefault_get", arguments)}, set:undefined},);
bodavm.toolsFunc.defineProperty(Image.prototype, "y", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, Image.prototype, "Image", "bodefault_get", arguments)}, set:undefined},);
bodavm.toolsFunc.defineProperty(Image.prototype, "decode", {configurable:true, enumerable:true, writable:true, value:function decode (){return bodavm.toolsFunc.dispatch(this, Image.prototype, "Image", "decode", arguments)}},);
bodavm.toolsFunc.defineProperty(Image.prototype, "fetchPriority", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, Image.prototype, "Image", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, Image.prototype, "Image", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(Image.prototype, "loading", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, Image.prototype, "Image", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, Image.prototype, "Image", "bodefault_set", arguments)}},);
