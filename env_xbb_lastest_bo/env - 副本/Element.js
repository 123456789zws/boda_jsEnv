// Element对象
Element = function Element(){let arg=arguments[0];
if (arg!='bobo' && !(this instanceof Element) ){return bodavm.toolsFunc.throwError("TypeError", "Illegal constructor")};bodavm.toolsFunc.symbolProperty(this);
if (arg =='bobo'){console.log_copy('Element 实例化对象 --->',JSON.stringify_bo(arguments,function(k,v){if (v==window){return 'window'}else{return v}}))};}

bodavm.toolsFunc.safeProto(Element, "Element");
Element.prototype.__proto__=Node.prototype;
Element.__proto__=Node;
bodavm.toolsFunc.defineProperty(Element.prototype, "namespaceURI", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_get", arguments)}, set:undefined},);
bodavm.toolsFunc.defineProperty(Element.prototype, "prefix", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_get", arguments)}, set:undefined},);
bodavm.toolsFunc.defineProperty(Element.prototype, "localName", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_get", arguments)}, set:undefined},);
bodavm.toolsFunc.defineProperty(Element.prototype, "tagName", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_get", arguments)}, set:undefined},);
bodavm.toolsFunc.defineProperty(Element.prototype, "id", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(Element.prototype, "className", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(Element.prototype, "classList", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(Element.prototype, "slot", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(Element.prototype, "attributes", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_get", arguments)}, set:undefined},);
bodavm.toolsFunc.defineProperty(Element.prototype, "shadowRoot", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_get", arguments)}, set:undefined},);
bodavm.toolsFunc.defineProperty(Element.prototype, "part", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(Element.prototype, "assignedSlot", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_get", arguments)}, set:undefined},);
bodavm.toolsFunc.defineProperty(Element.prototype, "innerHTML", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(Element.prototype, "outerHTML", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(Element.prototype, "scrollTop", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(Element.prototype, "scrollLeft", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(Element.prototype, "scrollWidth", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_get", arguments)}, set:undefined},);
bodavm.toolsFunc.defineProperty(Element.prototype, "scrollHeight", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_get", arguments)}, set:undefined},);
bodavm.toolsFunc.defineProperty(Element.prototype, "clientTop", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_get", arguments)}, set:undefined},);
bodavm.toolsFunc.defineProperty(Element.prototype, "clientLeft", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_get", arguments)}, set:undefined},);
bodavm.toolsFunc.defineProperty(Element.prototype, "clientWidth", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_get", arguments)}, set:undefined},);
bodavm.toolsFunc.defineProperty(Element.prototype, "clientHeight", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_get", arguments)}, set:undefined},);
bodavm.toolsFunc.defineProperty(Element.prototype, "onbeforecopy", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(Element.prototype, "onbeforecut", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(Element.prototype, "onbeforepaste", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(Element.prototype, "onsearch", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(Element.prototype, "elementTiming", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(Element.prototype, "onfullscreenchange", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(Element.prototype, "onfullscreenerror", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(Element.prototype, "onwebkitfullscreenchange", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(Element.prototype, "onwebkitfullscreenerror", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(Element.prototype, "role", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(Element.prototype, "ariaAtomic", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(Element.prototype, "ariaAutoComplete", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(Element.prototype, "ariaBusy", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(Element.prototype, "ariaBrailleLabel", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(Element.prototype, "ariaBrailleRoleDescription", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(Element.prototype, "ariaChecked", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(Element.prototype, "ariaColCount", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(Element.prototype, "ariaColIndex", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(Element.prototype, "ariaColSpan", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(Element.prototype, "ariaCurrent", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(Element.prototype, "ariaDescription", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(Element.prototype, "ariaDisabled", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(Element.prototype, "ariaExpanded", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(Element.prototype, "ariaHasPopup", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(Element.prototype, "ariaHidden", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(Element.prototype, "ariaInvalid", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(Element.prototype, "ariaKeyShortcuts", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(Element.prototype, "ariaLabel", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(Element.prototype, "ariaLevel", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(Element.prototype, "ariaLive", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(Element.prototype, "ariaModal", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(Element.prototype, "ariaMultiLine", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(Element.prototype, "ariaMultiSelectable", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(Element.prototype, "ariaOrientation", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(Element.prototype, "ariaPlaceholder", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(Element.prototype, "ariaPosInSet", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(Element.prototype, "ariaPressed", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(Element.prototype, "ariaReadOnly", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(Element.prototype, "ariaRelevant", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(Element.prototype, "ariaRequired", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(Element.prototype, "ariaRoleDescription", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(Element.prototype, "ariaRowCount", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(Element.prototype, "ariaRowIndex", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(Element.prototype, "ariaRowSpan", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(Element.prototype, "ariaSelected", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(Element.prototype, "ariaSetSize", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(Element.prototype, "ariaSort", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(Element.prototype, "ariaValueMax", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(Element.prototype, "ariaValueMin", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(Element.prototype, "ariaValueNow", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(Element.prototype, "ariaValueText", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(Element.prototype, "children", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_get", arguments)}, set:undefined},);
bodavm.toolsFunc.defineProperty(Element.prototype, "firstElementChild", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_get", arguments)}, set:undefined},);
bodavm.toolsFunc.defineProperty(Element.prototype, "lastElementChild", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_get", arguments)}, set:undefined},);
bodavm.toolsFunc.defineProperty(Element.prototype, "childElementCount", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_get", arguments)}, set:undefined},);
bodavm.toolsFunc.defineProperty(Element.prototype, "previousElementSibling", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_get", arguments)}, set:undefined},);
bodavm.toolsFunc.defineProperty(Element.prototype, "nextElementSibling", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "bodefault_get", arguments)}, set:undefined},);
bodavm.toolsFunc.defineProperty(Element.prototype, "after", {configurable:true, enumerable:true, writable:true, value:function after (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "after", arguments)}},);
bodavm.toolsFunc.defineProperty(Element.prototype, "animate", {configurable:true, enumerable:true, writable:true, value:function animate (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "animate", arguments)}},);
bodavm.toolsFunc.defineProperty(Element.prototype, "append", {configurable:true, enumerable:true, writable:true, value:function append (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "append", arguments)}},);
bodavm.toolsFunc.defineProperty(Element.prototype, "attachShadow", {configurable:true, enumerable:true, writable:true, value:function attachShadow (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "attachShadow", arguments)}},);
bodavm.toolsFunc.defineProperty(Element.prototype, "before", {configurable:true, enumerable:true, writable:true, value:function before (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "before", arguments)}},);
bodavm.toolsFunc.defineProperty(Element.prototype, "closest", {configurable:true, enumerable:true, writable:true, value:function closest (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "closest", arguments)}},);
bodavm.toolsFunc.defineProperty(Element.prototype, "computedStyleMap", {configurable:true, enumerable:true, writable:true, value:function computedStyleMap (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "computedStyleMap", arguments)}},);
bodavm.toolsFunc.defineProperty(Element.prototype, "getAttribute", {configurable:true, enumerable:true, writable:true, value:function getAttribute (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "getAttribute", arguments)}},);
bodavm.toolsFunc.defineProperty(Element.prototype, "getAttributeNS", {configurable:true, enumerable:true, writable:true, value:function getAttributeNS (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "getAttributeNS", arguments)}},);
bodavm.toolsFunc.defineProperty(Element.prototype, "getAttributeNames", {configurable:true, enumerable:true, writable:true, value:function getAttributeNames (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "getAttributeNames", arguments)}},);
bodavm.toolsFunc.defineProperty(Element.prototype, "getAttributeNode", {configurable:true, enumerable:true, writable:true, value:function getAttributeNode (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "getAttributeNode", arguments)}},);
bodavm.toolsFunc.defineProperty(Element.prototype, "getAttributeNodeNS", {configurable:true, enumerable:true, writable:true, value:function getAttributeNodeNS (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "getAttributeNodeNS", arguments)}},);
bodavm.toolsFunc.defineProperty(Element.prototype, "getBoundingClientRect", {configurable:true, enumerable:true, writable:true, value:function getBoundingClientRect (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "getBoundingClientRect", arguments)}},);
bodavm.toolsFunc.defineProperty(Element.prototype, "getClientRects", {configurable:true, enumerable:true, writable:true, value:function getClientRects (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "getClientRects", arguments)}},);
bodavm.toolsFunc.defineProperty(Element.prototype, "getElementsByClassName", {configurable:true, enumerable:true, writable:true, value:function getElementsByClassName (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "getElementsByClassName", arguments)}},);
bodavm.toolsFunc.defineProperty(Element.prototype, "getElementsByTagName", {configurable:true, enumerable:true, writable:true, value:function getElementsByTagName (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "getElementsByTagName", arguments)}},);
bodavm.toolsFunc.defineProperty(Element.prototype, "getElementsByTagNameNS", {configurable:true, enumerable:true, writable:true, value:function getElementsByTagNameNS (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "getElementsByTagNameNS", arguments)}},);
bodavm.toolsFunc.defineProperty(Element.prototype, "getInnerHTML", {configurable:true, enumerable:true, writable:true, value:function getInnerHTML (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "getInnerHTML", arguments)}},);
bodavm.toolsFunc.defineProperty(Element.prototype, "hasAttribute", {configurable:true, enumerable:true, writable:true, value:function hasAttribute (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "hasAttribute", arguments)}},);
bodavm.toolsFunc.defineProperty(Element.prototype, "hasAttributeNS", {configurable:true, enumerable:true, writable:true, value:function hasAttributeNS (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "hasAttributeNS", arguments)}},);
bodavm.toolsFunc.defineProperty(Element.prototype, "hasAttributes", {configurable:true, enumerable:true, writable:true, value:function hasAttributes (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "hasAttributes", arguments)}},);
bodavm.toolsFunc.defineProperty(Element.prototype, "hasPointerCapture", {configurable:true, enumerable:true, writable:true, value:function hasPointerCapture (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "hasPointerCapture", arguments)}},);
bodavm.toolsFunc.defineProperty(Element.prototype, "insertAdjacentElement", {configurable:true, enumerable:true, writable:true, value:function insertAdjacentElement (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "insertAdjacentElement", arguments)}},);
bodavm.toolsFunc.defineProperty(Element.prototype, "insertAdjacentHTML", {configurable:true, enumerable:true, writable:true, value:function insertAdjacentHTML (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "insertAdjacentHTML", arguments)}},);
bodavm.toolsFunc.defineProperty(Element.prototype, "insertAdjacentText", {configurable:true, enumerable:true, writable:true, value:function insertAdjacentText (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "insertAdjacentText", arguments)}},);
bodavm.toolsFunc.defineProperty(Element.prototype, "matches", {configurable:true, enumerable:true, writable:true, value:function matches (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "matches", arguments)}},);
bodavm.toolsFunc.defineProperty(Element.prototype, "prepend", {configurable:true, enumerable:true, writable:true, value:function prepend (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "prepend", arguments)}},);
bodavm.toolsFunc.defineProperty(Element.prototype, "querySelector", {configurable:true, enumerable:true, writable:true, value:function querySelector (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "querySelector", arguments)}},);
bodavm.toolsFunc.defineProperty(Element.prototype, "querySelectorAll", {configurable:true, enumerable:true, writable:true, value:function querySelectorAll (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "querySelectorAll", arguments)}},);
bodavm.toolsFunc.defineProperty(Element.prototype, "releasePointerCapture", {configurable:true, enumerable:true, writable:true, value:function releasePointerCapture (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "releasePointerCapture", arguments)}},);
bodavm.toolsFunc.defineProperty(Element.prototype, "remove", {configurable:true, enumerable:true, writable:true, value:function remove (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "remove", arguments)}},);
bodavm.toolsFunc.defineProperty(Element.prototype, "removeAttribute", {configurable:true, enumerable:true, writable:true, value:function removeAttribute (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "removeAttribute", arguments)}},);
bodavm.toolsFunc.defineProperty(Element.prototype, "removeAttributeNS", {configurable:true, enumerable:true, writable:true, value:function removeAttributeNS (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "removeAttributeNS", arguments)}},);
bodavm.toolsFunc.defineProperty(Element.prototype, "removeAttributeNode", {configurable:true, enumerable:true, writable:true, value:function removeAttributeNode (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "removeAttributeNode", arguments)}},);
bodavm.toolsFunc.defineProperty(Element.prototype, "replaceChildren", {configurable:true, enumerable:true, writable:true, value:function replaceChildren (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "replaceChildren", arguments)}},);
bodavm.toolsFunc.defineProperty(Element.prototype, "replaceWith", {configurable:true, enumerable:true, writable:true, value:function replaceWith (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "replaceWith", arguments)}},);
bodavm.toolsFunc.defineProperty(Element.prototype, "requestFullscreen", {configurable:true, enumerable:true, writable:true, value:function requestFullscreen (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "requestFullscreen", arguments)}},);
bodavm.toolsFunc.defineProperty(Element.prototype, "requestPointerLock", {configurable:true, enumerable:true, writable:true, value:function requestPointerLock (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "requestPointerLock", arguments)}},);
bodavm.toolsFunc.defineProperty(Element.prototype, "scroll", {configurable:true, enumerable:true, writable:true, value:function scroll (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "scroll", arguments)}},);
bodavm.toolsFunc.defineProperty(Element.prototype, "scrollBy", {configurable:true, enumerable:true, writable:true, value:function scrollBy (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "scrollBy", arguments)}},);
bodavm.toolsFunc.defineProperty(Element.prototype, "scrollIntoView", {configurable:true, enumerable:true, writable:true, value:function scrollIntoView (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "scrollIntoView", arguments)}},);
bodavm.toolsFunc.defineProperty(Element.prototype, "scrollIntoViewIfNeeded", {configurable:true, enumerable:true, writable:true, value:function scrollIntoViewIfNeeded (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "scrollIntoViewIfNeeded", arguments)}},);
bodavm.toolsFunc.defineProperty(Element.prototype, "scrollTo", {configurable:true, enumerable:true, writable:true, value:function scrollTo (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "scrollTo", arguments)}},);
bodavm.toolsFunc.defineProperty(Element.prototype, "setAttribute", {configurable:true, enumerable:true, writable:true, value:function setAttribute (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "setAttribute", arguments)}},);
bodavm.toolsFunc.defineProperty(Element.prototype, "setAttributeNS", {configurable:true, enumerable:true, writable:true, value:function setAttributeNS (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "setAttributeNS", arguments)}},);
bodavm.toolsFunc.defineProperty(Element.prototype, "setAttributeNode", {configurable:true, enumerable:true, writable:true, value:function setAttributeNode (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "setAttributeNode", arguments)}},);
bodavm.toolsFunc.defineProperty(Element.prototype, "setAttributeNodeNS", {configurable:true, enumerable:true, writable:true, value:function setAttributeNodeNS (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "setAttributeNodeNS", arguments)}},);
bodavm.toolsFunc.defineProperty(Element.prototype, "setPointerCapture", {configurable:true, enumerable:true, writable:true, value:function setPointerCapture (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "setPointerCapture", arguments)}},);
bodavm.toolsFunc.defineProperty(Element.prototype, "toggleAttribute", {configurable:true, enumerable:true, writable:true, value:function toggleAttribute (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "toggleAttribute", arguments)}},);
bodavm.toolsFunc.defineProperty(Element.prototype, "webkitMatchesSelector", {configurable:true, enumerable:true, writable:true, value:function webkitMatchesSelector (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "webkitMatchesSelector", arguments)}},);
bodavm.toolsFunc.defineProperty(Element.prototype, "webkitRequestFullScreen", {configurable:true, enumerable:true, writable:true, value:function webkitRequestFullScreen (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "webkitRequestFullScreen", arguments)}},);
bodavm.toolsFunc.defineProperty(Element.prototype, "webkitRequestFullscreen", {configurable:true, enumerable:true, writable:true, value:function webkitRequestFullscreen (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "webkitRequestFullscreen", arguments)}},);
bodavm.toolsFunc.defineProperty(Element.prototype, "checkVisibility", {configurable:true, enumerable:true, writable:true, value:function checkVisibility (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "checkVisibility", arguments)}},);
bodavm.toolsFunc.defineProperty(Element.prototype, "getAnimations", {configurable:true, enumerable:true, writable:true, value:function getAnimations (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "getAnimations", arguments)}},);
bodavm.toolsFunc.defineProperty(Element.prototype, "setHTML", {configurable:true, enumerable:true, writable:true, value:function setHTML (){return bodavm.toolsFunc.dispatch(this, Element.prototype, "Element", "setHTML", arguments)}},);
