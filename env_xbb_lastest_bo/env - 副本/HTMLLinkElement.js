// HTMLLinkElement对象
HTMLLinkElement = function HTMLLinkElement(){let arg=arguments[0];
if (arg!='bobo' && !(this instanceof HTMLLinkElement) ){return bodavm.toolsFunc.throwError("TypeError", "Illegal constructor")};bodavm.toolsFunc.symbolProperty(this);
if (arg =='bobo'){console.log_copy('HTMLLinkElement 实例化对象 --->',JSON.stringify_bo(arguments,function(k,v){if (v==window){return 'window'}else{return v}}))};}

bodavm.toolsFunc.safeProto(HTMLLinkElement, "HTMLLinkElement");
HTMLLinkElement.prototype.__proto__=HTMLElement.prototype;
HTMLLinkElement.__proto__=HTMLElement;
bodavm.toolsFunc.defineProperty(HTMLLinkElement.prototype, "disabled", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLLinkElement.prototype, "HTMLLinkElement", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLLinkElement.prototype, "HTMLLinkElement", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(HTMLLinkElement.prototype, "href", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLLinkElement.prototype, "HTMLLinkElement", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLLinkElement.prototype, "HTMLLinkElement", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(HTMLLinkElement.prototype, "crossOrigin", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLLinkElement.prototype, "HTMLLinkElement", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLLinkElement.prototype, "HTMLLinkElement", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(HTMLLinkElement.prototype, "rel", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLLinkElement.prototype, "HTMLLinkElement", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLLinkElement.prototype, "HTMLLinkElement", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(HTMLLinkElement.prototype, "relList", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLLinkElement.prototype, "HTMLLinkElement", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLLinkElement.prototype, "HTMLLinkElement", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(HTMLLinkElement.prototype, "media", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLLinkElement.prototype, "HTMLLinkElement", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLLinkElement.prototype, "HTMLLinkElement", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(HTMLLinkElement.prototype, "hreflang", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLLinkElement.prototype, "HTMLLinkElement", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLLinkElement.prototype, "HTMLLinkElement", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(HTMLLinkElement.prototype, "type", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLLinkElement.prototype, "HTMLLinkElement", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLLinkElement.prototype, "HTMLLinkElement", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(HTMLLinkElement.prototype, "as", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLLinkElement.prototype, "HTMLLinkElement", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLLinkElement.prototype, "HTMLLinkElement", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(HTMLLinkElement.prototype, "referrerPolicy", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLLinkElement.prototype, "HTMLLinkElement", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLLinkElement.prototype, "HTMLLinkElement", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(HTMLLinkElement.prototype, "sizes", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLLinkElement.prototype, "HTMLLinkElement", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLLinkElement.prototype, "HTMLLinkElement", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(HTMLLinkElement.prototype, "imageSrcset", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLLinkElement.prototype, "HTMLLinkElement", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLLinkElement.prototype, "HTMLLinkElement", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(HTMLLinkElement.prototype, "imageSizes", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLLinkElement.prototype, "HTMLLinkElement", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLLinkElement.prototype, "HTMLLinkElement", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(HTMLLinkElement.prototype, "charset", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLLinkElement.prototype, "HTMLLinkElement", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLLinkElement.prototype, "HTMLLinkElement", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(HTMLLinkElement.prototype, "rev", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLLinkElement.prototype, "HTMLLinkElement", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLLinkElement.prototype, "HTMLLinkElement", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(HTMLLinkElement.prototype, "target", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLLinkElement.prototype, "HTMLLinkElement", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLLinkElement.prototype, "HTMLLinkElement", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(HTMLLinkElement.prototype, "sheet", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLLinkElement.prototype, "HTMLLinkElement", "bodefault_get", arguments)}, set:undefined},);
bodavm.toolsFunc.defineProperty(HTMLLinkElement.prototype, "integrity", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLLinkElement.prototype, "HTMLLinkElement", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLLinkElement.prototype, "HTMLLinkElement", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(HTMLLinkElement.prototype, "fetchPriority", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLLinkElement.prototype, "HTMLLinkElement", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLLinkElement.prototype, "HTMLLinkElement", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(HTMLLinkElement.prototype, "blocking", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLLinkElement.prototype, "HTMLLinkElement", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLLinkElement.prototype, "HTMLLinkElement", "bodefault_set", arguments)}},);
