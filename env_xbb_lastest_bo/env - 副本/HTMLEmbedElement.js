// HTMLEmbedElement对象
HTMLEmbedElement = function HTMLEmbedElement(){let arg=arguments[0];
if (arg!='bobo' && !(this instanceof HTMLEmbedElement) ){return bodavm.toolsFunc.throwError("TypeError", "Illegal constructor")};bodavm.toolsFunc.symbolProperty(this);
if (arg =='bobo'){console.log_copy('HTMLEmbedElement 实例化对象 --->',JSON.stringify_bo(arguments,function(k,v){if (v==window){return 'window'}else{return v}}))};}

bodavm.toolsFunc.safeProto(HTMLEmbedElement, "HTMLEmbedElement");
HTMLEmbedElement.prototype.__proto__=HTMLElement.prototype;
HTMLEmbedElement.__proto__=HTMLElement;
bodavm.toolsFunc.defineProperty(HTMLEmbedElement.prototype, "src", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLEmbedElement.prototype, "HTMLEmbedElement", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLEmbedElement.prototype, "HTMLEmbedElement", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(HTMLEmbedElement.prototype, "type", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLEmbedElement.prototype, "HTMLEmbedElement", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLEmbedElement.prototype, "HTMLEmbedElement", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(HTMLEmbedElement.prototype, "width", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLEmbedElement.prototype, "HTMLEmbedElement", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLEmbedElement.prototype, "HTMLEmbedElement", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(HTMLEmbedElement.prototype, "height", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLEmbedElement.prototype, "HTMLEmbedElement", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLEmbedElement.prototype, "HTMLEmbedElement", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(HTMLEmbedElement.prototype, "align", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLEmbedElement.prototype, "HTMLEmbedElement", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLEmbedElement.prototype, "HTMLEmbedElement", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(HTMLEmbedElement.prototype, "name", {configurable:true, enumerable:true, get:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLEmbedElement.prototype, "HTMLEmbedElement", "bodefault_get", arguments)}, set:function bodefault (){return bodavm.toolsFunc.dispatch(this, HTMLEmbedElement.prototype, "HTMLEmbedElement", "bodefault_set", arguments)}},);
bodavm.toolsFunc.defineProperty(HTMLEmbedElement.prototype, "getSVGDocument", {configurable:true, enumerable:true, writable:true, value:function getSVGDocument (){return bodavm.toolsFunc.dispatch(this, HTMLEmbedElement.prototype, "HTMLEmbedElement", "getSVGDocument", arguments)}},);
