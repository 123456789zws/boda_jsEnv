// HTMLCanvasElement对象
bodavm.memory.globalobj['HTMLCanvasElement'] = function HTMLCanvasElement(){this._boisinit=bodavm.config.isinit;return bodavm.toolsFunc.throwError("TypeError", "Illegal constructor")}
bodavm.toolsFunc.safeProto(bodavm.memory.globalobj['HTMLCanvasElement'], "HTMLCanvasElement");
bodavm.memory.globalobj['HTMLCanvasElement'].prototype.__proto__=bodavm.memory.globalobj['HTMLElement'].prototype;
bodavm.memory.globalobj['HTMLCanvasElement'].__proto__=bodavm.memory.globalobj['HTMLElement'];
bodavm.toolsFunc.defineProperty('HTMLCanvasElement', "width", {configurable:true, enumerable:true, get:function width (){return bodavm.toolsFunc.dispatch(this, bodavm.memory.globalobj['HTMLCanvasElement'].prototype, "HTMLCanvasElement", "width_get", arguments)}, set:function width (){return bodavm.toolsFunc.dispatch(this, bodavm.memory.globalobj['HTMLCanvasElement'].prototype, "HTMLCanvasElement", "width_set", arguments)}},'prototype');
bodavm.toolsFunc.defineProperty('HTMLCanvasElement', "height", {configurable:true, enumerable:true, get:function height (){return bodavm.toolsFunc.dispatch(this, bodavm.memory.globalobj['HTMLCanvasElement'].prototype, "HTMLCanvasElement", "height_get", arguments)}, set:function height (){return bodavm.toolsFunc.dispatch(this, bodavm.memory.globalobj['HTMLCanvasElement'].prototype, "HTMLCanvasElement", "height_set", arguments)}},'prototype');
bodavm.toolsFunc.defineProperty('HTMLCanvasElement', "captureStream", {configurable:true, enumerable:true, writable:true, value:function captureStream (){return bodavm.toolsFunc.dispatch(this, bodavm.memory.globalobj['HTMLCanvasElement'].prototype, "HTMLCanvasElement", "captureStream", arguments)}},'prototype');
bodavm.toolsFunc.defineProperty('HTMLCanvasElement', "getContext", {configurable:true, enumerable:true, writable:true, value:function getContext (){return bodavm.toolsFunc.dispatch(this, bodavm.memory.globalobj['HTMLCanvasElement'].prototype, "HTMLCanvasElement", "getContext", arguments)}},'prototype');
bodavm.toolsFunc.defineProperty('HTMLCanvasElement', "toBlob", {configurable:true, enumerable:true, writable:true, value:function toBlob (){return bodavm.toolsFunc.dispatch(this, bodavm.memory.globalobj['HTMLCanvasElement'].prototype, "HTMLCanvasElement", "toBlob", arguments)}},'prototype');
bodavm.toolsFunc.defineProperty('HTMLCanvasElement', "toDataURL", {configurable:true, enumerable:true, writable:true, value:function toDataURL (){return bodavm.toolsFunc.dispatch(this, bodavm.memory.globalobj['HTMLCanvasElement'].prototype, "HTMLCanvasElement", "toDataURL", arguments)}},'prototype');
bodavm.toolsFunc.defineProperty('HTMLCanvasElement', "transferControlToOffscreen", {configurable:true, enumerable:true, writable:true, value:function transferControlToOffscreen (){return bodavm.toolsFunc.dispatch(this, bodavm.memory.globalobj['HTMLCanvasElement'].prototype, "HTMLCanvasElement", "transferControlToOffscreen", arguments)}},'prototype');
