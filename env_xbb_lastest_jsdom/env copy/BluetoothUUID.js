// BluetoothUUID对象
bodavm.memory.globalobj['BluetoothUUID'] = function BluetoothUUID(){return bodavm.toolsFunc.throwError("TypeError", "Illegal constructor")}
bodavm.toolsFunc.safeProto(bodavm.memory.globalobj['BluetoothUUID'], "BluetoothUUID");
bodavm.toolsFunc.defineProperty('BluetoothUUID', "canonicalUUID", {configurable:true, enumerable:true, writable:true, value:function canonicalUUID (){return bodavm.toolsFunc.dispatch(this, bodavm.memory.globalobj['BluetoothUUID'].prototype, "BluetoothUUID", "canonicalUUID", arguments)}});
bodavm.toolsFunc.defineProperty('BluetoothUUID', "getCharacteristic", {configurable:true, enumerable:true, writable:true, value:function getCharacteristic (){return bodavm.toolsFunc.dispatch(this, bodavm.memory.globalobj['BluetoothUUID'].prototype, "BluetoothUUID", "getCharacteristic", arguments)}});
bodavm.toolsFunc.defineProperty('BluetoothUUID', "getDescriptor", {configurable:true, enumerable:true, writable:true, value:function getDescriptor (){return bodavm.toolsFunc.dispatch(this, bodavm.memory.globalobj['BluetoothUUID'].prototype, "BluetoothUUID", "getDescriptor", arguments)}});
bodavm.toolsFunc.defineProperty('BluetoothUUID', "getService", {configurable:true, enumerable:true, writable:true, value:function getService (){return bodavm.toolsFunc.dispatch(this, bodavm.memory.globalobj['BluetoothUUID'].prototype, "BluetoothUUID", "getService", arguments)}});
