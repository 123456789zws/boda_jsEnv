!function(){

bodavm.toolsFunc.style_=function (style){
    bodavm.toolsFunc.windowdefineProperty(style, "0", { configurable: true, enumerable: true, writable: false, value: "font-family" });
    bodavm.toolsFunc.windowdefineProperty(style, "1", { configurable: true, enumerable: true, writable: false, value: "font-size" });
    bodavm.toolsFunc.windowdefineProperty(style, "accentColor", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "additiveSymbols", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "alignContent", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "alignItems", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "alignSelf", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "alignmentBaseline", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "all", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "animation", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "animationDelay", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "animationDirection", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "animationDuration", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "animationFillMode", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "animationIterationCount", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "animationName", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "animationPlayState", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "animationTimingFunction", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "appRegion", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "appearance", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "ascentOverride", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "aspectRatio", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "backdropFilter", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "backfaceVisibility", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "background", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "backgroundAttachment", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "backgroundBlendMode", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "backgroundClip", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "backgroundColor", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "backgroundImage", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "backgroundOrigin", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "backgroundPosition", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "backgroundPositionX", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "backgroundPositionY", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "backgroundRepeat", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "backgroundRepeatX", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "backgroundRepeatY", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "backgroundSize", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "basePalette", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "baselineShift", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "blockSize", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "border", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "borderBlock", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "borderBlockColor", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "borderBlockEnd", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "borderBlockEndColor", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "borderBlockEndStyle", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "borderBlockEndWidth", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "borderBlockStart", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "borderBlockStartColor", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "borderBlockStartStyle", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "borderBlockStartWidth", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "borderBlockStyle", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "borderBlockWidth", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "borderBottom", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "borderBottomColor", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "borderBottomLeftRadius", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "borderBottomRightRadius", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "borderBottomStyle", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "borderBottomWidth", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "borderCollapse", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "borderColor", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "borderEndEndRadius", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "borderEndStartRadius", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "borderImage", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "borderImageOutset", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "borderImageRepeat", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "borderImageSlice", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "borderImageSource", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "borderImageWidth", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "borderInline", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "borderInlineColor", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "borderInlineEnd", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "borderInlineEndColor", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "borderInlineEndStyle", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "borderInlineEndWidth", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "borderInlineStart", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "borderInlineStartColor", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "borderInlineStartStyle", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "borderInlineStartWidth", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "borderInlineStyle", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "borderInlineWidth", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "borderLeft", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "borderLeftColor", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "borderLeftStyle", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "borderLeftWidth", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "borderRadius", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "borderRight", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "borderRightColor", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "borderRightStyle", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "borderRightWidth", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "borderSpacing", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "borderStartEndRadius", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "borderStartStartRadius", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "borderStyle", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "borderTop", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "borderTopColor", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "borderTopLeftRadius", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "borderTopRightRadius", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "borderTopStyle", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "borderTopWidth", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "borderWidth", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "bottom", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "boxShadow", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "boxSizing", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "breakAfter", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "breakBefore", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "breakInside", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "bufferedRendering", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "captionSide", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "caretColor", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "clear", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "clip", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "clipPath", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "clipRule", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "color", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "colorInterpolation", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "colorInterpolationFilters", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "colorRendering", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "colorScheme", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "columnCount", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "columnFill", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "columnGap", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "columnRule", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "columnRuleColor", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "columnRuleStyle", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "columnRuleWidth", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "columnSpan", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "columnWidth", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "columns", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "contain", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "containIntrinsicBlockSize", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "containIntrinsicHeight", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "containIntrinsicInlineSize", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "containIntrinsicSize", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "containIntrinsicWidth", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "content", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "contentVisibility", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "counterIncrement", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "counterReset", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "counterSet", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "cursor", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "cx", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "cy", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "d", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "descentOverride", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "direction", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "display", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "dominantBaseline", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "emptyCells", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "fallback", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "fill", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "fillOpacity", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "fillRule", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "filter", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "flex", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "flexBasis", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "flexDirection", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "flexFlow", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "flexGrow", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "flexShrink", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "flexWrap", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "float", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "floodColor", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "floodOpacity", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "font", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "fontDisplay", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "fontFamily", { configurable: true, enumerable: true, get: function () { return bodavm.toolsFunc.dispatch(this, bodavm.memory.globalobj['CSSStyleDeclaration'].prototype, "CSSStyleDeclaration", "fontFamily_get  ", arguments) }, set: function () { return bodavm.toolsFunc.dispatch(this, bodavm.memory.globalobj['CSSStyleDeclaration'].prototype, "CSSStyleDeclaration", "fontFamily_set", arguments) } });
    bodavm.toolsFunc.windowdefineProperty(style, "fontFeatureSettings", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "fontKerning", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "fontOpticalSizing", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "fontPalette", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "fontSize", { configurable: true, enumerable: true, writable: true, value: "160px" });
    bodavm.toolsFunc.windowdefineProperty(style, "fontStretch", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "fontStyle", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "fontSynthesis", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "fontSynthesisSmallCaps", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "fontSynthesisStyle", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "fontSynthesisWeight", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "fontVariant", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "fontVariantCaps", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "fontVariantEastAsian", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "fontVariantLigatures", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "fontVariantNumeric", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "fontVariationSettings", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "fontWeight", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "forcedColorAdjust", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "gap", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "grid", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "gridArea", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "gridAutoColumns", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "gridAutoFlow", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "gridAutoRows", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "gridColumn", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "gridColumnEnd", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "gridColumnGap", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "gridColumnStart", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "gridGap", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "gridRow", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "gridRowEnd", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "gridRowGap", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "gridRowStart", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "gridTemplate", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "gridTemplateAreas", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "gridTemplateColumns", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "gridTemplateRows", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "height", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "hyphens", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "imageOrientation", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "imageRendering", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "inherits", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "initialValue", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "inlineSize", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "inset", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "insetBlock", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "insetBlockEnd", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "insetBlockStart", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "insetInline", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "insetInlineEnd", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "insetInlineStart", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "isolation", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "justifyContent", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "justifyItems", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "justifySelf", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "left", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "letterSpacing", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "lightingColor", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "lineBreak", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "lineGapOverride", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "lineHeight", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "listStyle", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "listStyleImage", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "listStylePosition", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "listStyleType", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "margin", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "marginBlock", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "marginBlockEnd", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "marginBlockStart", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "marginBottom", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "marginInline", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "marginInlineEnd", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "marginInlineStart", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "marginLeft", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "marginRight", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "marginTop", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "marker", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "markerEnd", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "markerMid", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "markerStart", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "mask", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "maskType", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "maxBlockSize", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "maxHeight", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "maxInlineSize", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "maxWidth", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "maxZoom", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "minBlockSize", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "minHeight", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "minInlineSize", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "minWidth", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "minZoom", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "mixBlendMode", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "negative", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "objectFit", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "objectPosition", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "offset", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "offsetDistance", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "offsetPath", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "offsetRotate", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "opacity", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "order", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "orientation", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "orphans", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "outline", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "outlineColor", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "outlineOffset", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "outlineStyle", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "outlineWidth", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "overflow", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "overflowAnchor", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "overflowClipMargin", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "overflowWrap", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "overflowX", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "overflowY", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "overrideColors", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "overscrollBehavior", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "overscrollBehaviorBlock", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "overscrollBehaviorInline", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "overscrollBehaviorX", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "overscrollBehaviorY", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "pad", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "padding", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "paddingBlock", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "paddingBlockEnd", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "paddingBlockStart", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "paddingBottom", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "paddingInline", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "paddingInlineEnd", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "paddingInlineStart", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "paddingLeft", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "paddingRight", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "paddingTop", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "page", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "pageBreakAfter", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "pageBreakBefore", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "pageBreakInside", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "pageOrientation", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "paintOrder", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "perspective", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "perspectiveOrigin", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "placeContent", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "placeItems", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "placeSelf", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "pointerEvents", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "position", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "prefix", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "quotes", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "r", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "range", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "resize", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "right", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "rowGap", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "rubyPosition", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "rx", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "ry", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "scrollBehavior", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "scrollMargin", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "scrollMarginBlock", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "scrollMarginBlockEnd", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "scrollMarginBlockStart", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "scrollMarginBottom", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "scrollMarginInline", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "scrollMarginInlineEnd", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "scrollMarginInlineStart", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "scrollMarginLeft", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "scrollMarginRight", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "scrollMarginTop", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "scrollPadding", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "scrollPaddingBlock", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "scrollPaddingBlockEnd", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "scrollPaddingBlockStart", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "scrollPaddingBottom", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "scrollPaddingInline", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "scrollPaddingInlineEnd", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "scrollPaddingInlineStart", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "scrollPaddingLeft", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "scrollPaddingRight", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "scrollPaddingTop", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "scrollSnapAlign", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "scrollSnapStop", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "scrollSnapType", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "scrollbarGutter", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "shapeImageThreshold", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "shapeMargin", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "shapeOutside", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "shapeRendering", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "size", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "sizeAdjust", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "speak", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "speakAs", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "src", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "stopColor", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "stopOpacity", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "stroke", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "strokeDasharray", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "strokeDashoffset", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "strokeLinecap", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "strokeLinejoin", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "strokeMiterlimit", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "strokeOpacity", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "strokeWidth", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "suffix", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "symbols", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "syntax", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "system", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "tabSize", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "tableLayout", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "textAlign", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "textAlignLast", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "textAnchor", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "textCombineUpright", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "textDecoration", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "textDecorationColor", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "textDecorationLine", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "textDecorationSkipInk", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "textDecorationStyle", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "textDecorationThickness", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "textEmphasis", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "textEmphasisColor", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "textEmphasisPosition", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "textEmphasisStyle", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "textIndent", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "textOrientation", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "textOverflow", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "textRendering", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "textShadow", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "textSizeAdjust", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "textTransform", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "textUnderlineOffset", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "textUnderlinePosition", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "top", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "touchAction", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "transform", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "transformBox", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "transformOrigin", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "transformStyle", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "transition", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "transitionDelay", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "transitionDuration", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "transitionProperty", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "transitionTimingFunction", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "unicodeBidi", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "unicodeRange", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "userSelect", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "userZoom", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "vectorEffect", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "verticalAlign", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "visibility", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitAlignContent", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitAlignItems", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitAlignSelf", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitAnimation", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitAnimationDelay", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitAnimationDirection", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitAnimationDuration", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitAnimationFillMode", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitAnimationIterationCount", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitAnimationName", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitAnimationPlayState", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitAnimationTimingFunction", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitAppRegion", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitAppearance", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitBackfaceVisibility", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitBackgroundClip", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitBackgroundOrigin", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitBackgroundSize", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitBorderAfter", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitBorderAfterColor", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitBorderAfterStyle", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitBorderAfterWidth", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitBorderBefore", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitBorderBeforeColor", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitBorderBeforeStyle", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitBorderBeforeWidth", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitBorderBottomLeftRadius", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitBorderBottomRightRadius", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitBorderEnd", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitBorderEndColor", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitBorderEndStyle", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitBorderEndWidth", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitBorderHorizontalSpacing", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitBorderImage", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitBorderRadius", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitBorderStart", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitBorderStartColor", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitBorderStartStyle", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitBorderStartWidth", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitBorderTopLeftRadius", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitBorderTopRightRadius", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitBorderVerticalSpacing", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitBoxAlign", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitBoxDecorationBreak", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitBoxDirection", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitBoxFlex", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitBoxOrdinalGroup", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitBoxOrient", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitBoxPack", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitBoxReflect", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitBoxShadow", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitBoxSizing", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitClipPath", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitColumnBreakAfter", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitColumnBreakBefore", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitColumnBreakInside", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitColumnCount", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitColumnGap", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitColumnRule", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitColumnRuleColor", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitColumnRuleStyle", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitColumnRuleWidth", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitColumnSpan", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitColumnWidth", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitColumns", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitFilter", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitFlex", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitFlexBasis", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitFlexDirection", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitFlexFlow", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitFlexGrow", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitFlexShrink", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitFlexWrap", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitFontFeatureSettings", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitFontSmoothing", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitHighlight", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitHyphenateCharacter", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitJustifyContent", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitLineBreak", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitLineClamp", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitLocale", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitLogicalHeight", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitLogicalWidth", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitMarginAfter", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitMarginBefore", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitMarginEnd", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitMarginStart", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitMask", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitMaskBoxImage", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitMaskBoxImageOutset", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitMaskBoxImageRepeat", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitMaskBoxImageSlice", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitMaskBoxImageSource", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitMaskBoxImageWidth", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitMaskClip", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitMaskComposite", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitMaskImage", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitMaskOrigin", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitMaskPosition", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitMaskPositionX", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitMaskPositionY", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitMaskRepeat", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitMaskRepeatX", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitMaskRepeatY", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitMaskSize", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitMaxLogicalHeight", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitMaxLogicalWidth", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitMinLogicalHeight", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitMinLogicalWidth", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitOpacity", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitOrder", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitPaddingAfter", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitPaddingBefore", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitPaddingEnd", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitPaddingStart", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitPerspective", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitPerspectiveOrigin", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitPerspectiveOriginX", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitPerspectiveOriginY", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitPrintColorAdjust", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitRtlOrdering", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitRubyPosition", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitShapeImageThreshold", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitShapeMargin", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitShapeOutside", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitTapHighlightColor", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitTextCombine", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitTextDecorationsInEffect", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitTextEmphasis", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitTextEmphasisColor", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitTextEmphasisPosition", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitTextEmphasisStyle", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitTextFillColor", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitTextOrientation", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitTextSecurity", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitTextSizeAdjust", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitTextStroke", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitTextStrokeColor", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitTextStrokeWidth", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitTransform", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitTransformOrigin", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitTransformOriginX", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitTransformOriginY", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitTransformOriginZ", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitTransformStyle", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitTransition", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitTransitionDelay", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitTransitionDuration", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitTransitionProperty", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitTransitionTimingFunction", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitUserDrag", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitUserModify", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitUserSelect", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "webkitWritingMode", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "whiteSpace", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "widows", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "width", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "willChange", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "wordBreak", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "wordSpacing", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "wordWrap", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "writingMode", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "x", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "y", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "zIndex", { configurable: true, enumerable: true, writable: true, value: "" });
    bodavm.toolsFunc.windowdefineProperty(style, "zoom", { configurable: true, enumerable: true, writable: true, value: "" });
    return style
}


}()